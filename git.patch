commit 0de30f3c80fa819fc8d3f4815251d63c1615ba98
Author: Arkadiusz Miśkiewicz <arekm@maven.pl>
Date:   Wed Sep 22 08:52:45 2021 +0200

    Keep sys mounted, too (lvm tools use these).

diff --git a/rc.d/rc.shutdown b/rc.d/rc.shutdown
index d86f962..b4f6e7e 100755
--- a/rc.d/rc.shutdown
+++ b/rc.d/rc.shutdown
@@ -82,7 +82,7 @@ if ! is_yes "$VSERVER"; then
 			&& $2 !~ ig {print $2}' /proc/mounts)
 	while [ -n "$remaining" -a "$retry" -gt 0 ]; do
 	 	show "Unmounting file systems"; busy
-		ERRORS=$(umount -a $force -t noproc 2>&1); rc=$?
+		ERRORS=$(umount -a $force -t noproc,nosysfs 2>&1); rc=$?
 
 		# we might had unmounted /usr, recheck $TPUT availability
 		# but well. we need tput only for show() and busy() (ok() and fail() messages are already cached)

commit 6371a9cfbcc65b0e32a1e34f46610ea0dccb9d3f
Author: Arkadiusz Miśkiewicz <arekm@maven.pl>
Date:   Wed Sep 22 09:34:14 2021 +0200

    vgchange -a n can hang on shutdown waiting for udevd synchronization. Don't do such synchronization since  udevd is already killed at this moment anyway. (https://listman.redhat.com/archives/linux-lvm/2021-September/msg00011.html)

diff --git a/rc.d/rc.shutdown b/rc.d/rc.shutdown
index b4f6e7e..c6ecd5a 100755
--- a/rc.d/rc.shutdown
+++ b/rc.d/rc.shutdown
@@ -117,7 +117,7 @@ if ! is_yes "$VSERVER"; then
 	if [ -x /sbin/vgchange ]; then
 		lvmversion=$(LC_ALL=C /sbin/vgchange --version 2>/dev/null | awk '/LVM version:/{if ($3 >= 2) print "2"}')
 		if [ "$lvmversion" = "2" ]; then
-			lvmsysinit="--sysinit"
+			lvmsysinit="--sysinit --noudevsync"
 		else
 			lvmsysinit=""
 		fi

commit 31b68aac1cc37a4135056a16967535519bc7eff0
Author: Adam Osuchowski <adwol@pld-linux.org>
Date:   Fri Jan 28 01:20:30 2022 +0100

    - wait for duplicated IPv6 address detection while interface configuration

diff --git a/lib/ifup b/lib/ifup
index 38780bf..71652f7 100755
--- a/lib/ifup
+++ b/lib/ifup
@@ -219,6 +219,19 @@ else
 	# IPv6 in use ?
 	if is_yes "$IPV6_NETWORKING" && [ -n "${IP6ADDR}" ]; then
 		ip addr add ${IP6ADDR} dev ${DEVICE} ${IP6ADDROPT}
+		timeout=0
+		while [ $timeout -le 20 ] && \
+		      if_state="`ip -o addr list dev ${DEVICE} to ${IP6ADDR}`" && \
+		      echo "$if_state" | grep -q tentative && \
+		      ! echo "$if_state" | grep -q dadfailed ; do
+			usleep 500000
+			timeout=$((timeout+1))
+		done
+		if ip -o addr list dev ${DEVICE} to ${IP6ADDR} | grep -q dadfailed ; then
+			ip addr del ${IP6ADDR} dev ${DEVICE}
+			nls '%s: Duplicated address detected: %s' "$DEVICE" "$IP6ADDR"
+			exit 1
+		fi
 		if [ -n "${IP6ADDRLABEL}" ]; then
 			ip addrlabel add prefix ${IP6ADDR} dev ${DEVICE} label ${IP6ADDRLABEL}
 		fi

commit b8adb71fbeabf8890720ab44bb43dfb6bc68e3b7
Author: Jan Rękorajski <baggins@pld-linux.org>
Date:   Sat Oct 21 10:58:11 2023 +0200

    Drop grsecurity sysctl knobs

diff --git a/sysctl.conf b/sysctl.conf
index a34935b..de26cd5 100644
--- a/sysctl.conf
+++ b/sysctl.conf
@@ -140,58 +140,6 @@ kernel.sysrq = 1
 # 0 - never reboot system (suggested 60)
 #kernel.panic = 60
 
-#
-# GRSECURITY http://www.grsecurity.org
-#
-# WARNING!
-# These values are SET ONCE!
-#
-#kernel.grsecurity.linking_restrictions = 1
-#kernel.grsecurity.fifo_restrictions = 1
-#kernel.grsecurity.destroy_unused_shm = 0
-#kernel.grsecurity.chroot_caps = 0
-#kernel.grsecurity.chroot_deny_chmod = 0
-#kernel.grsecurity.chroot_deny_chroot = 1
-#kernel.grsecurity.chroot_deny_fchdir = 0
-#kernel.grsecurity.chroot_deny_mknod = 1
-#kernel.grsecurity.chroot_deny_mount = 1
-#kernel.grsecurity.chroot_deny_pivot = 1
-#kernel.grsecurity.chroot_deny_shmat = 0
-#kernel.grsecurity.chroot_deny_sysctl = 1
-#kernel.grsecurity.chroot_deny_unix = 0
-#kernel.grsecurity.chroot_enforce_chdir = 0
-#kernel.grsecurity.chroot_execlog = 0
-#kernel.grsecurity.chroot_findtask = 1
-#kernel.grsecurity.chroot_restrict_nice = 0
-
-#kernel.grsecurity.exec_logging = 0
-#kernel.grsecurity.signal_logging = 1
-#kernel.grsecurity.forkfail_logging = 0
-#kernel.grsecurity.timechange_logging = 1
-#kernel.grsecurity.audit_chdir = 0
-#kernel.grsecurity.audit_gid = 65505
-#kernel.grsecurity.audit_group = 0
-#kernel.grsecurity.audit_ipc = 0
-#kernel.grsecurity.audit_mount = 0
-
-#kernel.grsecurity.execve_limiting = 1
-#kernel.grsecurity.dmesg = 1
-#kernel.grsecurity.tpe = 1
-#kernel.grsecurity.tpe_gid = 65500
-#kernel.grsecurity.tpe_glibc = 0
-#kernel.grsecurity.tpe_restrict_all = 0
-
-#kernel.grsecurity.rand_pids = 1
-#kernel.grsecurity.socket_all = 1
-#kernel.grsecurity.socket_all_gid = 65501
-#kernel.grsecurity.socket_client = 1
-#kernel.grsecurity.socket_client_gid = 65502
-#kernel.grsecurity.socket_server = 1
-#kernel.grsecurity.socket_server_gid = 65503
-
-#kernel.grsecurity.disable_modules = 0
-#kernel.grsecurity.grsec_lock = 0
-
 # kernel.randomize_va_space = 2
 # 0 - Turn the process address space randomization off by default.
 # 1 - Conservative address space randomization makes the addresses of

commit af38444cbbd0962c350a178b45a2cc32f94570a0
Author: Jan Rękorajski <baggins@pld-linux.org>
Date:   Sat Oct 21 11:01:58 2023 +0200

    Add (commented out) vm.oom_kill_allocating_task sysctl knob

diff --git a/sysctl.conf b/sysctl.conf
index de26cd5..0b39fd9 100644
--- a/sysctl.conf
+++ b/sysctl.conf
@@ -127,6 +127,12 @@ net.ipv4.conf.default.rp_filter = 1
 # fs.file-max = 8192
 # fs.inode-max = 16384
 
+# Sometimes (read: always) the Linux OOM killer doesn’t kill the offending
+# process. Usually, this is because as the system is out of memory, it isn’t
+# able to do the memory intensive task of scanning through all the processes.
+# Ironic.
+#vm.oom_kill_allocating_task = 1
+
 # Controls whether core dumps will append the PID to the core filename.
 # Useful for debugging multi-threaded applications.
 #kernel.core_uses_pid = 1
@@ -140,7 +146,6 @@ kernel.sysrq = 1
 # 0 - never reboot system (suggested 60)
 #kernel.panic = 60
 
-# kernel.randomize_va_space = 2
 # 0 - Turn the process address space randomization off by default.
 # 1 - Conservative address space randomization makes the addresses of
 #     mmap base and VDSO page randomized. This, among other things,
@@ -154,6 +159,7 @@ kernel.sysrq = 1
 #     start of the brk area is randomized. There are however no known
 #     non-legacy applications that would be broken this way, so for most
 #     systems it is safe to choose Full randomization.
+# kernel.randomize_va_space = 2
 
 # for mplayer
 #dev.rtc.max-user-freq = 1024

commit 8f507628ee9d6eff95f4e001e56f40600c2fcb60
Author: Arkadiusz Miśkiewicz <arekm@maven.pl>
Date:   Sun Apr 14 15:41:40 2024 +0200

    Skip cgroup/cgroup2 fs, too.

diff --git a/rc.d/rc.shutdown b/rc.d/rc.shutdown
index c6ecd5a..a3807dd 100755
--- a/rc.d/rc.shutdown
+++ b/rc.d/rc.shutdown
@@ -77,7 +77,7 @@ if ! is_yes "$VSERVER"; then
 		UMOUNT_IGNORE="/ $UMOUNT_IGNORE"
 	fi
 	remaining=$(awk -v ig="^($UMOUNT_IGNORE)$" 'BEGIN { gsub(/[\t ]+/, "|", ig); } \
-			$3 !~ /^(proc|loopfs|devpts|devtmpfs|shm|iso9660|ramfs|tmpfs|sysfs|securityfs|squashfs)$/ \
+			$3 !~ /^(proc|loopfs|devpts|devtmpfs|shm|iso9660|ramfs|tmpfs|cgroup|cgroup2|sysfs|securityfs|squashfs)$/ \
 			&& $1 !~ /^(none|\/dev\/root)$/ \
 			&& $2 !~ ig {print $2}' /proc/mounts)
 	while [ -n "$remaining" -a "$retry" -gt 0 ]; do
@@ -101,7 +101,7 @@ if ! is_yes "$VSERVER"; then
 
 		sleep 2
 		remaining=$(awk -v ig="^($UMOUNT_IGNORE)$" 'BEGIN { gsub(/[\t ]+/, "|", ig); } \
-				$3 !~ /^(proc|loopfs|devpts|devtmpfs|shm|iso9660|ramfs|tmpfs|sysfs|securityfs|squashfs)$/ \
+				$3 !~ /^(proc|loopfs|devpts|devtmpfs|shm|iso9660|ramfs|tmpfs|cgroup|cgroup2|sysfs|securityfs|squashfs)$/ \
 				&& $1 !~ /^(none|\/dev\/root)$/ \
 				&& $2 !~ ig {print $2}' /proc/mounts)
 		[ -z "$remaining" ] && break

commit 5a02578c97b0a2c01cc453344397645efc437f18
Author: Arkadiusz Miśkiewicz <arekm@maven.pl>
Date:   Sun Apr 14 16:00:06 2024 +0200

    Umount remaining filesystems one by one (using -R) option which helps in cases when we have chroot mounted somewhere with proc, sys etc inside. Also when doing final -a umount skip tmpfs (used by /run) and dev* (used in /dev).

diff --git a/rc.d/rc.shutdown b/rc.d/rc.shutdown
index a3807dd..be5c785 100755
--- a/rc.d/rc.shutdown
+++ b/rc.d/rc.shutdown
@@ -81,8 +81,20 @@ if ! is_yes "$VSERVER"; then
 			&& $1 !~ /^(none|\/dev\/root)$/ \
 			&& $2 !~ ig {print $2}' /proc/mounts)
 	while [ -n "$remaining" -a "$retry" -gt 0 ]; do
-	 	show "Unmounting file systems"; busy
-		ERRORS=$(umount -a $force -t noproc,nosysfs 2>&1); rc=$?
+		for mnt in $remaining; do
+			run_cmd "$(nls 'Umounting file system: %s' $mnt)" umount $force -R $mnt
+
+			# we might had unmounted /usr, recheck $TPUT availability
+			# but well. we need tput only for show() and busy() (ok() and fail() messages are already cached)
+			# TODO: look ahead the messages?
+			if is_yes "$TPUT"; then
+			    TPUT=
+			    rc_gettext_init
+			fi
+		done
+
+		show "Unmounting remainging file systems"; busy
+		ERRORS=$(umount -a $force -t noproc,nosysfs,notmpfs,nodevpts,nodevtmpfs 2>&1); rc=$?
 
 		# we might had unmounted /usr, recheck $TPUT availability
 		# but well. we need tput only for show() and busy() (ok() and fail() messages are already cached)
@@ -96,7 +108,10 @@ if ! is_yes "$VSERVER"; then
 			ok
 		else
 			fail
-			[ -n "$ERRORS" ] && echo "$ERRORS"
+			if [ -n "$ERRORS" ]; then
+			       nls "Umount errors:"
+			       echo "$ERRORS"
+			fi
 		fi
 
 		sleep 2

commit 64eec49fa594a9ba5f631c3a65c74a1df8a82b75
Author: Adam Osuchowski <>
Date:   Mon Jan 20 12:38:22 2025 +0100

    Conditions for lxc similar to vservers

diff --git a/lib/functions b/lib/functions
index d1b6c1e..d81eaca 100644
--- a/lib/functions
+++ b/lib/functions
@@ -369,7 +369,8 @@ nls() {
 rc_splash() {
 	local action="$1"
 
-	if ! is_no "$BOOT_SPLASH" && ! is_yes "$VSERVER"; then
+	if ! is_no "$BOOT_SPLASH" && ! is_yes "$VSERVER" && \
+		[[ "$container" != lxc* ]]; then
 		[ -x /bin/splash ] && /bin/splash "$action"
 	fi
 
@@ -495,7 +496,7 @@ filter_chroot() {
 		pids=$(filter_ns "$@") && set -- "$pids"
 	fi
 
-	if is_yes "$VSERVER"; then
+	if is_yes "$VSERVER" || [[ "$container" = lxc* ]]; then
 		echo $@
 		return
 	fi
diff --git a/rc.d/rc b/rc.d/rc
index eba0652..74303c4 100755
--- a/rc.d/rc
+++ b/rc.d/rc
@@ -69,6 +69,7 @@ fi
 # (it can be serial console too)
 if [ "$COLUMNS" -gt 0 ]; then
 	if [ "$argv2" != "chroot" ] && ! is_yes "$VSERVER" && \
+		[[ "$container" != lxc* ]] && \
 		[ "$runlevel" = "0" -o "$runlevel" = "6" ]; then
 		CONSOLE=/dev/tty1
 		[ -x /usr/bin/chvt ] && /usr/bin/chvt 1 && echo > $CONSOLE
@@ -82,7 +83,8 @@ fi
 
 # See if we want to be in user confirmation mode
 if [ "$previous" = "N" ]; then
-	if ! is_yes "$VSERVER" && grep -qi confirm /proc/cmdline >/dev/null 2>/dev/null \
+	if ! is_yes "$VSERVER" && [[ "$container" != lxc* ]] && \
+		grep -qi confirm /proc/cmdline >/dev/null 2>/dev/null \
 		|| [ -f /var/run/confirm ]; then
 		rm -f /var/run/confirm
 		CONFIRM="yes"
@@ -129,7 +131,7 @@ else
 	export progress=0
 fi
 
-if is_yes "$VSERVER"; then
+if is_yes "$VSERVER" || [[ "$container" = lxc* ]]; then
 	# if runlevel is not 0 (halt) or 6 (reboot) run rc.sysinit
 	# BUT only if rc is run standalone (not run by init, as init will run rc.sysinit)
 	if [ "$previous" != "N" -a "$runlevel" != "0" -a "$runlevel" != "6" ]; then
diff --git a/rc.d/rc.shutdown b/rc.d/rc.shutdown
index be5c785..9fc1d2a 100755
--- a/rc.d/rc.shutdown
+++ b/rc.d/rc.shutdown
@@ -54,7 +54,7 @@ fi
 # Write to wtmp file before unmounting /var
 halt -w
 
-if ! is_yes "$VSERVER"; then
+if ! is_yes "$VSERVER" && [[ "$container" != lxc* ]]; then
 	# Turn off swap, then unmount file systems.
 	run_cmd "Turning off swap" swapoff -a
 
diff --git a/rc.d/rc.sysinit b/rc.d/rc.sysinit
index b55f0cc..86f7c27 100755
--- a/rc.d/rc.sysinit
+++ b/rc.d/rc.sysinit
@@ -1045,7 +1045,7 @@ is_yes "$SELINUX" && restorecon /tmp/.ICE-unix >/dev/null 2>&1
 
 test -d /var/run/netreport || mkdir -m 770 /var/run/netreport
 
-if ! is_yes "$VSERVER"; then
+if ! is_yes "$VSERVER" && [[ "$container" != lxc* ]]; then
 	enable_swap
 
 	# If a SCSI tape has been detected, load the st module unconditionally

commit e524e438e7cc9114d4bf524db4c4670c6fcce8e4
Author: Adam Osuchowski <>
Date:   Mon Jan 20 14:46:38 2025 +0100

    fix const qualifier

diff --git a/src/initlog.c b/src/initlog.c
index 3b1cded..134e952 100644
--- a/src/initlog.c
+++ b/src/initlog.c
@@ -369,7 +369,7 @@ int processArgs(int argc, char **argv, int silent) {
         { 0, 0, 0, 0, 0, 0 }
     };
     
-    context = poptGetContext("initlog", argc, argv, optTable, 0);
+    context = poptGetContext("initlog", argc, (const char **)argv, optTable, 0);
     
     while ((rc = poptGetNextOpt(context)) > 0) {
 	switch (rc) {
diff --git a/src/process.c b/src/process.c
index 475d188..4449237 100644
--- a/src/process.c
+++ b/src/process.c
@@ -244,7 +244,7 @@ int monitor(char *cmdname, int pid, int numfds, int *fds, int reexec, int quiet,
 			      tmpargs=NULL;
 			      cmdargc=0;
 			      
-			      poptParseArgvString(tmpstr,&cmdargc,&tmpargs);
+			      poptParseArgvString(tmpstr,&cmdargc,(const char ***)&tmpargs);
 			      cmdargs=malloc( (cmdargc+2) * sizeof(char *) );
 			      cmdargs[0]=strdup("initlog");
 			      for (z=0;z<(cmdargc);z++) {
@@ -293,7 +293,7 @@ int runCommand(char *cmd, int reexec, int quiet, int debug) {
     char **args, **tmpargs;
     char *cmdname;
     
-    poptParseArgvString(cmd,&x,&tmpargs);
+    poptParseArgvString(cmd,&x,(const char ***)&tmpargs);
     args = malloc((x+1)*sizeof(char *));
     for ( pid = 0; pid < x ; pid++) {
 	args[pid] = strdup(tmpargs[pid]);
